{
	"name": "Copy_All_Tables",
	"properties": {
		"activities": [
			{
				"name": "Lookup table names from local",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT s.name as SchemaName, t.name as TableName\nFROM sys.tables t\ninner join sys.schemas s\non t.schema_id=s.schema_id\nwhere s.name ='SalesLT'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_TableNames",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach SalesLT Table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup table names from local",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup table names from local').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@{concat('SELECT * FROM ', item().SchemaName, '.', item().TableName)}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "FlattenHierarchy"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "dsLocalSqlTable",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "BronzeParquet",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().SchemaName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Silver to Gold",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Silver to Gold",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "sparkpoolnsm",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": "Small",
					"numExecutors": null
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2024-02-08T18:49:37Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}